{
	"main": {
		"prefix": "main",
		"body": [
			"#include<bits/stdc++.h>",
			"#define rep(i,a,b) for(ll i=a;i<b;i++)",
			"#define rrep(i,a,b) for(ll i=a;i>=b;i--)",
			"#define fore(i,a) for(auto &i:a)",
			"#define all(x) (x).begin(),(x).end()",
			"#pragma GCC optimize (\"-O3\")",
			"",
			"using namespace std;",
			"using ll = long long;",
			"using ld = long double;",
			"using i128 = __ll128_t;",
			"",
			"typedef pair<ll, ll> pll;",
			"typedef vector<vector<ll>> matrix;",
			"typedef vector<ll> onevec;",
			"typedef set<ll> iset;",
			"",
			"const ll INFL = 1LL << 60;",
			"template <class T> bool chmin(T &a, T b) {",
			"    if (a > b) {",
			"        a = b;",
			"        return true;",
			"    }",
			"    return false;",
			"}",
			"template <class T> bool chmax(T &a, T b) {",
			"    if (a < b) {",
			"        a = b;",
			"        return true;",
			"    }",
			"    return false;",
			"}",
			"template <typename T> ll isize(const T &container) {",
			"    return static_cast<ll>(container.size());",
			"}",
			"template <typename T> bool ifbit(T number, ll bit) {",
			"     return (number & (1LL << bit)) != 0;",
			"}",
			"ll bits_count(ll v) { return __builtin_popcountll(v); }",
			"/*--------------------------------------------------------",
			"                         \\0w0/ ",
			"                        OwOkaomoji",
			"                     ｡˚ (¦3ꇤ )3 ⋆｡˚✩",
			"----------------------------------------------------------*/",
			"",
			"ll main() {",
			"    $1",
			"    ll n",
			"    cin >> n;",
			"    return 0;",
			"}",
		]
	},
	"bfs": {
		"prefix": "bfs",
		"body": [
			"using Graph = vector<vector<ll>>;",
			"",
			"void bfs(const Graph& G, ll start, vector<ll>& dist) {",
			"    ll n = G.size();",
			"    queue<ll> que;",
			"",
			"    dist[ll] = 0; // 初期ノード",
			"    que.push(ll);",
			"",
			"    while (!que.empty()) {",
			"        ll v = que.front();",
			"        que.pop();",
			"",
			"        for (ll nv : G[v]) {",
			"            if (dist[nv] != -1) continue; // 訪問済み",
			"            dist[nv] = dist[v] + 1;",
			"            que.push(nv);",
			"        }",
			"    }",
			"}",
			"",
			"ll main() {",
			"    $1",
			"    ll N, M; // 頂点数と辺数",
			"    cin >> N >> M;",
			"",
			"    Graph G(N); ",
			"    for (ll i = 0; i < M; ++i) { // 辺の入力",
			"        ll u, v;",
			"        cin >> u >> v;",
			"        u--; v--; // 0-indexedに変換",
			"        G[u].push_back(v);",
			"        G[v].push_back(u); // 無向グラフ",
			"    }",
			"",
			"    vector<ll> dist(N, -1); // 距離配列",
			"    bfs(G, 0, dist); // 頂点0を始点としてBFS実行",
			"",
			"    for (ll v = 0; v < N; ++v) {",
			"        cout << dist[v] << \"\\n\";",
			"    }",
			"",
			"    return 0;",
			"}"
		],
	},
	"bin": {
		"prefix": "bin",
		"body": [
			"ll my_bin(ll ok, ll ng, function<bool(ll)> condition) {",
			"    while (abs(ok - ng) > 1) {",
			"        ll mid = (ok + ng) / 2;",
			"        if (condition(mid)) {",
			"            ok = mid;",
			"        } else {",
			"            ng = mid;",
			"        }",
			"    }",
			"    return ok;",
			"}",
			"",
			"ll main() {",
			"    $1",
			"    ll n, q;",
			"    cin >> n >> q;",
			"",
			"    vector<ll> A(n);",
			"    for (auto &&a : A) cin >> a;",
			"    sort(A.begin(), A.end());",
			"",
			"    for (ll i = 0; i < q; i++) {",
			"        ll x;",
			"        cin >> x;",
			"",
			"        auto condition = [&](ll mid) { return A[mid] >= x; };",
			"",
			"        ll idx = my_bin(n, -1, condition);",
			"        cout << n - idx << endl;",
			"    }",
			"",
			"    return 0;",
			"}"
		],
	},
	"divirsions": {
		"prefix": "divisors",
		"body": [
			"vector<ll> calc_divisors(ll N) {",
			" vector<ll> res;",
			"",
			" for (ll i = 1; i * i <= N; ++i) {",
			"  if (N % i != 0) continue;",
			"",
			"  res.push_back(i);",
			"",
			"  if (N / i != i) res.push_back(N / i);",
			" }",
			"",
			" sort(res.begin(), res.end());",
			" return res;",
			"}",
			"    $1",
		]
	},
	"prime_fac": {
		"prefix": "prime_fac",
		"body": [
			"vector<pair<ll, ll>> prime_factorize(ll N) {",
			"    vector<pair<ll, ll>> res;",
			"",
			"    for (ll p = 2; p * p <= N; ++p) {",
			"        if (N % p != 0) {",
			"            continue;",
			"        }",
			"",
			"        ll e = 0;",
			"        while (N % p == 0) {",
			"            ++e;",
			"            N /= p;",
			"        }",
			"",
			"        res.emplace_back(p, e);",
			"    }",
			"",
			"    if (N != 1) {",
			"        res.emplace_back(N, 1);",
			"    }",
			"    return res;",
			"}",
			"",
			"ll main() {",
			"    $1",
			"    ll n;",
			"    cin >> n;",
			"    const auto &pf = prime_factorize(n);",
			"    for (const auto &p : pf) {",
			"        cout << p.first << \" \" << p.second << endl;",
			"    }",
			"    return 0;",
			"}"
		]
	},
	"dp": {
		"prefix": "dp",
		"body": [
			"ll main() {",
			"    $1",
			" ll n;",
			" cin >> n;",
			"",
			" vector<ll> h(n); ",
			" for (ll i = 0; i < n; ++i) {",
			"  cin >> h[i];",
			" }",
			" vector<ll> dp(n, INFL);",
			"",
			" // 初期条件の設定",
			" dp[0] = 0;",
			"",
			" // ループ",
			" for (ll i = 1; i < n; ++i) {",
			"  chmin(dp[i], dp[i - 1] + abs(h[i] - h[i - 1]));",
			" }",
			"",
			" // 結果の出力",
			" cout << dp[n - 1] << endl;",
			"",
			" return 0;",
			"}",
		]
	},
	"findstr": {
		"prefix": "findstr",
		"body": [
			"struct findstr {",
			"    string S;",
			"    ll N;",
			"    findstr() {}",
			"    findstr(string s) { init(s); }",
			"    void init(string s) {",
			"        S = s;",
			"        N = S.length();",
			"        init();",
			"    }",
			"    // get the nearest index for the char",
			"    vector<ll> left[26], right[26];",
			"    inline void init() {",
			"        rep(c, 0, 25) {",
			"            right[c].resize(N);",
			"            right[c][N - 1] = INFI;",
			"        }",
			"        rrep(i, N - 2, 0) {",
			"            rep(c, 0, 25) right[c][i] = right[c][i + 1];",
			"            right[S[i + 1]][i] = i + 1;",
			"        }",
			"        rep(c, 0, 25) {",
			"            left[c].resize(N);",
			"            left[c][0] = -1;",
			"        }",
			"        rep(i, 1, N - 1) {",
			"            rep(c, 0, 25) left[c][i] = left[c][i - 1];",
			"            left[S[i - 1]][i] = i - 1;",
			"        }",
			"    }",
			"    inline ll goright(ll cu, ll c) {",
			"        if (cu == INFI) return INFI;",
			"        if (cu < 0) {",
			"            if (S[0] == c) return 0;",
			"            cu = 0;",
			"        }",
			"        return right[c][cu];",
			"    }",
			"    inline ll goleft(ll cu, ll c) {",
			"        if (cu < 0) return cu;",
			"        return left[c][cu];",
			"    }",
			"};",
			"",
			"ll main() {",
			"    $1",
			"    ll N;",
			"    string S;",
			"    cin >> N >> S;",
			"",
			"    fore(c, S) c -= '0';",
			"    findstr sm(S);",
			"",
			"    ll ans = 0;",
			"    rep(x0, 0, 9) rep(x1, 0, 9) rep(x2, 0, 9) {",
			"        ll cu = -1;",
			"        cu = sm.goright(cu, x0);",
			"        cu = sm.goright(cu, x1);",
			"        cu = sm.goright(cu, x2);",
			"        if (cu < INFI) ans++;",
			"    }",
			"    cout << ans << endl;",
			"}"
		]
	},
	"findpll": {
		"prefix": "findpll",
		"body": [
			"ll main() {",
			"    $1",
			"    const ll max_this = 1000000;",
			"    ll n;",
			"    cin >> n;",
			"",
			"    vector<ll> x_n(n);",
			"    vector<ll> y_n(n);",
			"    set<pll> isin; ",
			"",
			"    for (ll i = 0; i < n; ++i) {",
			"        cin >> x_n[i] >> y_n[i];",
			"        isin.insert(make_pair(x_n[i], y_n[i])); // 座標をセットに挿入",
			"    }",
			"    // 座標が有効かをチェックするラムダ関数",
			"    auto check = [&](ll x, ll y) -> bool {",
			"        if (x < 0 || x > max_this || y < 0 || y > max_this) {",
			"            return false; // 範囲外",
			"        }",
			"        return isin.count(make_pair(x, y)) > 0; ",
			"    };",
			"",
			"    // テスト用の座標を入力してチェック",
			"    ll a, b;",
			"    cin >> a >> b;",
			"    if (check(a, b)) {",
			"        cout << \"Yes\" << endl;",
			"    } else {",
			"        cout << \"No\" << endl;",
			"    }",
			"",
			"    return 0;",
			"}"
		]
	}
}