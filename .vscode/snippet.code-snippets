{
	"main": {
		"prefix": "main",
		"body": [
			"#include <iostream>",
			"#include <vector>",
			"#include <queue>",
			"#include <map>",
			"#include <set>",
			"#include <algorithm>",
			"#include <cmath>",
			"#include <string>",
			"#include <utility>",
			"",
			"using namespace std;",
			"using ll = long long;",
			"",
			"int main() {",
			"    $1",
			"    return 0;",
			"}"
		]
	},
	"bfs": {
		"prefix": "bfs",
		"body": [
			"#include <iostream>",
			"#include <vector>",
			"#include <queue>",
			"#include <map>",
			"#include <set>",
			"#include <algorithm>",
			"#include <cmath>",
			"#include <string>",
			"#include <utility>",
			"using namespace std;",
			"using ll = long long;",
			"",
			"using Graph = vector<vector<int>>;",
			"",
			"void bfs(const Graph& G, int start, vector<int>& dist) {",
			"    int n = G.size();",
			"    queue<int> que;",
			"",
			"    dist[start] = 0; // 初期ノード",
			"    que.push(start);",
			"",
			"    while (!que.empty()) {",
			"        int v = que.front();",
			"        que.pop();",
			"",
			"        for (int nv : G[v]) {",
			"            if (dist[nv] != -1) continue; // 訪問済み",
			"            dist[nv] = dist[v] + 1;",
			"            que.push(nv);",
			"        }",
			"    }",
			"}",
			"",
			"int main() {",
			"    $1",
			"    int N; // 頂点数",
			"    cin >> N;",
			"",
			"    Graph G(N + 1); // 1-indexed グラフ",
			"    for (int i = 0; i < N - 1; ++i) { // 辺の入力",
			"        int u, v;",
			"        cin >> u >> v;",
			"        G[u].push_back(v);",
			"        G[v].push_back(u); // 無向グラフ",
			"    }",
			"",
			"    vector<int> dist(N + 1, -1); // 距離配列",
			"    bfs(G, 1, dist); // 頂点1を始点としてBFS実行",
			"",
			"    for (int v = 1; v <= N; ++v) {",
			"        cout << dist[v] << \"\\n\";",
			"    }",
			"",
			"    return 0;",
			"}"
		],
	},
	"bin": {
		"prefix": "bin",
		"body": [
			"#include <iostream>",
			"#include <vector>",
			"#include <queue>",
			"#include <map>",
			"#include <set>",
			"#include <algorithm>",
			"#include <cmath>",
			"#include <string>",
			"#include <utility>",
			"",
			"using namespace std;",
			"using ll = long long;",
			"",
			"int main() {",
			"    $1",
			"    int n, m;",
			"    cin >> n >> m;",
			"",
			"    vector<int> A(n);",
			"    for (auto &&a : A) {",
			"        cin >> a;",
			"    }",
			"",
			"    // 配列をソート",
			"    sort(A.begin(), A.end());",
			"",
			"    for (int i = 0; i < m; i++) {",
			"        int x;",
			"        cin >> x;",
			"",
			"        // 二分探索による計算",
			"        cout << n - (lower_bound(A.begin(), A.end(), x) - A.begin()) << \"\\n\";",
			"    }",
			"    return 0;",
			"}"
		],
	}
}